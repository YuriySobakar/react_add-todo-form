{"version":3,"sources":["helpers/helpers.ts","api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["users","id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","completed","title","cn","TodoList","todos","map","makeNewId","todosArrray","todoIdArray","el","Math","max","completedTodo","usersFromServer","userId","persons","filter","person","App","useState","setTodos","setTodoTitle","hasTitleError","setTitleError","setUserId","hasUserError","setUserError","action","method","onSubmit","e","userList","preventDefault","us","prevTodos","htmlFor","type","placeholder","value","onChange","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b367a79d.chunk.js","sourcesContent":["import {\n  MakeTodo,\n  Todo,\n  FindUser,\n  User,\n} from '../types/types';\n\nexport const makeComletedTodo: MakeTodo = (todos, users) => {\n  return todos.map(todo => {\n    const persons = users.filter(person => person.id === todo.userId);\n\n    return {\n      ...todo,\n      user: persons[0],\n    };\n  });\n};\n\nexport const makeNewId = (todosArrray: Todo[]): number => {\n  const todoIdArray = todosArrray.map(el => el.id);\n\n  return Math.max(...todoIdArray) + 1;\n};\n\nexport const findUser: FindUser = (userList, id) => {\n  const users: User [] = userList.filter(us => us.id === id);\n\n  return users[0];\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { User } from '../../types/types';\n\ninterface Props {\n  user: User\n}\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const { email, name } = user;\n\n  return (\n    <a\n      className=\"UserInfo\"\n      href={`mailto:${email}`}\n    >\n      {name}\n    </a>\n  );\n};\n","import cn from 'classnames';\nimport { Completed } from '../../types/types';\nimport { UserInfo } from '../UserInfo';\n\ninterface Props {\n  todo: Completed\n}\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    id,\n    completed,\n    title,\n    user,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={cn(\n        'TodoInfo', { 'TodoInfo--completed': completed },\n      )}\n      key={id}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {user\n      && (\n        <UserInfo user={user} />\n      )}\n    </article>\n  );\n};\n","import React from 'react';\nimport { Completed } from '../../types/types';\nimport { TodoInfo } from '../TodoInfo';\n\ninterface Props {\n  todos: Completed[];\n}\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map((todo) => {\n        return (\n          <TodoInfo\n            key={todo.id}\n            todo={todo}\n          />\n        );\n      })}\n    </section>\n  );\n};\n","import './App.scss';\nimport React, { useState } from 'react';\nimport { Completed } from './types/types';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoList } from './components/TodoList';\nimport { makeComletedTodo, makeNewId, findUser } from './helpers/helpers';\n\nconst completedTodo = makeComletedTodo(todosFromServer, usersFromServer);\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState(completedTodo);\n\n  const onSubmit = (todo: Completed) => {\n    setTodos((prevTodos) => [...prevTodos, todo]);\n  };\n\n  const [title, setTodoTitle] = useState('');\n  const [hasTitleError, setTitleError] = useState(false);\n\n  const [userId, setUserId] = useState(0);\n  const [hasUserError, setUserError] = useState(false);\n\n  const reset = () => {\n    setTodoTitle('');\n    setUserId(0);\n  };\n\n  const handleTitleChange = (e:React.ChangeEvent<HTMLInputElement>) => {\n    setTodoTitle(e.target.value);\n    setTitleError(false);\n  };\n\n  const handleUserChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserId(+e.target.value);\n    setUserError(false);\n  };\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n\n    setTitleError(!title);\n    setUserError(!userId);\n\n    if (title && userId) {\n      onSubmit({\n        id: makeNewId(todos),\n        title,\n        completed: false,\n        userId,\n        user: findUser(usersFromServer, userId),\n      });\n\n      reset();\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/todos\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label htmlFor=\"title\">Title: </label>\n          <input\n            id=\"title\"\n            type=\"text\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a title\"\n            value={title}\n            onChange={handleTitleChange}\n          />\n          {hasTitleError\n          && (<span className=\"error\"> Please enter a title</span>)}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"users\">Users: </label>\n          <select\n            id=\"users\"\n            data-cy=\"userSelect\"\n            onChange={handleUserChange}\n            value={userId}\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n            {usersFromServer.map((person) => {\n              return (\n                <option\n                  key={person.id}\n                  value={person.id}\n                >\n                  {person.name}\n                </option>\n              );\n            })}\n          </select>\n\n          {hasUserError && <span className=\"error\"> Please choose a user</span>}\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n        >\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}